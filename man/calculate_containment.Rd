% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spatial.R
\name{calculate_containment}
\alias{calculate_containment}
\title{Calculate mobility containment with spatial mapping}
\usage{
calculate_containment(mobility_data, spatial_zones = NULL, create_map = TRUE)
}
\arguments{
\item{mobility_data}{Data frame with mobility data containing:
\itemize{
\item origin - Origin zone identifier
\item dest - Destination zone identifier
\item n_trips - Number of trips between origin and destination
\item date - Date of trips (optional)
}}

\item{spatial_zones}{sf object with spatial zones for mapping (optional).
If provided, should contain 'id' column matching origin/dest values.
Use \code{get_zones()} to obtain.}

\item{create_map}{Logical. Whether to create spatial map if spatial_zones provided (default: TRUE).
Set to FALSE to skip map creation for faster processing.}
}
\value{
List containing:
\itemize{
\item containment - Data frame with containment indices per zone
\item summary - Summary statistics (avg, median, min, max containment)
\item map - ggplot2 choropleth map (if spatial_zones provided and create_map = TRUE)
}
}
\description{
Calculates containment index (proportion of trips within same zone)
and creates spatial maps automatically for spatial analysis.
}
\details{
Containment index measures spatial self-containment by calculating the proportion
of trips that start and end in the same zone. Values range from 0 (no internal trips)
to 1 (all trips are internal). Higher values indicate more self-contained zones.

The function automatically:
\itemize{
\item Calculates containment indices for each origin zone
\item Computes summary statistics
\item Creates choropleth map showing containment patterns
\item Uses viridis color scale for accessibility
}
}
\examples{
\dontrun{
# Basic containment analysis with mapping
mobility <- get_mobility(dates = "2023-01-01", level = "dist")
zones <- get_zones("dist")

result <- calculate_containment(mobility, zones)
print(result$map)  # View spatial map
print(result$summary)  # View summary statistics

# Analysis without mapping (faster)
result_no_map <- calculate_containment(mobility, create_map = FALSE)
head(result_no_map$containment)
}
}
